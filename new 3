protected void btnModificaConNota_Click(object sender, EventArgs e)
    {
        try
        {
            string curso = txtCurso.Text;


            if (curso == "Primavera P6 B치sico")
            {
                ddlSigla.SelectedIndex = 1;
            }
            if (curso == "Primavera Risk")
            {
                ddlSigla.SelectedIndex = 2;
            }
            if (curso == "Primavera P6 Avanzado")
            {
                ddlSigla.SelectedIndex = 3;
            }
        }
        catch
        {
            Debug.Print("Error al leer la sigla");
        }

        string confirmValue = Request.Form["confirm_value"];
        //el nuevo registro es aprovado
        if (confirmValue == "Si")
        {
            txtRut.ReadOnly = true;
            gvLista.Visible = false;
            gvLista.DataSource = null;
            gvLista.DataBind();
            btnModificar.Visible = false;
            try
            {

                id = Convert.ToInt32(lblID.Text);
                int idO = id;
                Debug.Print("el id es : " + idO);
                var Reader = Namespace.Conexion.reader("SELECT estado FROM curso_registros WHERE id=" + idO);
                string estadx = "";
                using (Reader)
                {
                    if (Reader.Read())
                    {
                        estadx = Reader["estado"].ToString();
                    }
                }
                Reader.Close();
                Namespace.Conexion.Desconectar();
                //el usuario anteriormente estaba aprovado
                //se guarda los registros de cursos antes de modificar
                if (estadx == "Aprobado")
                {

                    Reader = Namespace.Conexion.reader("SELECT rut,codigoA,id,estado FROM curso_registros WHERE id=" + idO);

                    string rutAux, codigoAux, idAux, mensaje;
                    rutAux = string.Empty;
                    codigoAux = string.Empty;
                    idAux = string.Empty;
                    mensaje = string.Empty;
                    using (Reader)
                    {
                        if (Reader.Read())
                        {
                            rutAux = Reader["rut"].ToString();
                            codigoAux = Reader["codigoA"].ToString();
                            idAux = Reader["id"].ToString();
                        }
                    }
                    Reader.Close();
                    Namespace.Conexion.Desconectar();
                    DateTime fechaH = DateTime.Now.Date;
                    mensaje = fechaH.ToString("yyyy/MM/dd");
                    lblError.Visible = true;
                    lblError.Text = rutAux + codigoAux + idAux;
                    string strSQL = "INSERT INTO curso_registros_old VALUES('" + rutAux + "','" + codigoAux + "'," + idAux + "," + 0 + ",'" + mensaje + "');";
                    Namespace.Conexion.insert(strSQL);

                }

                //se obtienen los datos del formulario
                rut = txtRut.Text;
                string curso = txtCurso.Text;
                string estado = ddlEstado.SelectedItem.ToString();
                string fechaCurso = fechas3();
                string sig = ddlSigla.SelectedValue;
                string ids = lblIdFecha.Text;
                int idCurso = Convert.ToInt32(lblCursoId.Text);
                string fechas = txtFecha.Text;
                int asistencia = 0;

                var adp = Namespace.Conexion.iniciarConexionAux("SELECT * FROM curso_registros WHERE rut='" + rut + "' AND id_curso=" + idCurso + " AND id_fechas='" + ids + "' AND id NOT IN('" + id + "') ");
                System.Data.DataTable dt = new System.Data.DataTable();
                using (adp)
                {

                    adp.Fill(dt);
                    if (dt.Rows.Count > 0)
                    {
                        string message = "alert('Este rut contiene un registro en ese curso y en las mismas fechas.')";
                        ScriptManager.RegisterClientScriptBlock((sender as Control), this.GetType(), "alert", message, true);

                    }

                    //un estado a sido seleccionado
                    if (ddlEstado.SelectedIndex != 0 && dt.Rows.Count <= 0)
                    {
                        // el usuario se selecciono como aprovado
                        if (ddlEstado.SelectedIndex == 1 && ddlSigla.SelectedIndex != 0)
                        {

                            for (int i = 0; i < 1;)
                            {
                                codigo = "MTC" + a침o + sig + CreateRandomCode();
                                bool value = codigoExistente(codigo);
                                if (value == false)
                                {
                                    i++;
                                    insertarCodigo(codigo, rut);
                                }
                            }
                            if (txtAsistencia.Text != string.Empty)
                            {
                                asistencia = Convert.ToInt32(txtAsistencia.Text);
                            }
							actualizarRegistro(rut, curso, fechaCurso, fecha, null, estado, id, fechas, ids, idCurso, asistencia);
							LimpiarControles();
							txtRut.ReadOnly = true; txtRut.Enabled = true;
							lblIdFecha.Text = string.Empty;
							string message = "alert('Registro Modificado')";
							ScriptManager.RegisterClientScriptBlock((sender as Control), this.GetType(), "alert", message, true);
							txtRut.Visible = true;
							btnListar.Visible = true;
						}
					}
					else
					{
						string message = "alert('Ocurri칩 un error durante la modificaci칩n del registro.')";
                        ScriptManager.RegisterClientScriptBlock((sender as Control), this.GetType(), "alert", message, true);
					}
				}
			}
		}
	}